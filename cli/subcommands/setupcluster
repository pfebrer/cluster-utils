#!/bin/bash

yaml_files=$@
sshconfig=~/.ssh/config
current_user=$(logname)

# If yaml files have been provided, then load clusters from them
unset new_clusters
for yaml_file in ${yaml_files}; do
	if [ -f "${yaml_file}" ]; then 
		# Read the yaml file
		yay ${yaml_file} new_clusters
	fi
done

# Once the clusters are loaded, just go one by one setting them up
if [ ! -z "${yaml_files}" ]; then 
	for cluster_var in ${new_clusters[children]}; do
		# Get the information, defining the environment
		# variables that setupcluster will use.
		usergetter=${cluster_var}[user]
		hostnamegetter=${cluster_var}[hostname]
		export user=${!usergetter}
		export hostname=${!hostnamegetter}
		export host=${cluster_var#new_clusters_}
		# And then let setupcluster setup this host
		clusterutils setupcluster
	done
	exit;
fi

# From here, we will process a call to the script when no yaml
# files are provided. This is where the real setup is done
echo "------------------------------------"
echo
echo " Please fill in the following fields:"
echo 

read_ifnotdef(){
	if [ -z ${!2} ]; then
		read -p "$1" "$2"
	else
		echo "$1 ${!2}"
	fi
}

read_ifnotdef " - Host: " host
read_ifnotdef " - User ($current_user): " user
user=${user:-${current_user}}
read_ifnotdef " - HostName (optional): " hostname

# Write it to the ssh config file
echo "" >> $sshconfig
echo "Host $host" >> $sshconfig
echo "  User ${user}" >> $sshconfig
if [ ! -z "${hostname}" ]; then
	echo "  HostName $hostname" >> $sshconfig
fi
echo "" >> $sshconfig

clusters_yaml=$(clusterutils path "clusters.yaml")

# Write the cluster into the yaml clusters file
echo "${host}:" >> ${clusters_yaml}
for var in user hostname; do
	if [ ! -z ${!var} ]; then 
		echo "  ${var}: ${!var}" >> ${clusters_yaml}
	fi
done	

echo 
echo " Host ${host} added to ${sshconfig} and ${clusters_yaml}."
echo 
echo "------------------------------------"

echo ""
echo " We are going to set up the ssh keys now..."
echo ""

if clusterutils sendkeys "${host}"; then 
	echo " APPARENTLY, EVERYTHING WENT FINE :)"
	echo " You should be ready to mount the host to the filesystem with"
	echo "     clusterutils mount ${host}"
else
	echo " LOOKS LIKE SOMETHING HAS GONE WRONG :("
	echo " Look at the errors above to understand why." 
	echo " You can try to send the keys again with:"
	echo "     clusterutils sendkeys ${host}"
fi
