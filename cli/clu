#!/bin/bash
# PYTHON_ARGCOMPLETE_OK

# The following is a trick so that the python interpreter can be selected dinamically.
# Shell commands follow
# Next line is bilingual: it starts a comment in Python, and is a no-op in shell
""":"

# Find a suitable python interpreter
possible_pys="$(_clupyoptions)"
for cmd in ${possible_pys}; do
   command -v > /dev/null $cmd && exec $cmd $0 "$@"
done

echo "No python interpreter found. Tried: ${possible_pys}"

exit 2

":"""
# Previous line is bilingual: it ends a comment in Python, and is a no-op in shell
# Shell commands end here
# Python script follows

import argparse
from subcommands import SubCommand

try:
    import argcomplete
    ARGCOMPLETE_AVAIL = True
except ModuleNotFoundError:
    ARGCOMPLETE_AVAIL = False

def clu(parsed_args):

    args = vars(parsed_args)

    SubCommand._all[args.pop("subcommand")](**args)

if __name__ == "__main__":

    parser = argparse.ArgumentParser()

    subparsers = parser.add_subparsers(dest="subcommand")

    SubCommand.register_all(subparsers)

    if ARGCOMPLETE_AVAIL:
        argcomplete.autocomplete(parser)

    clu(parser.parse_args())
